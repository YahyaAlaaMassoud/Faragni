c
n
c
n
image.content_type
image
c
p
p[:user]
c
p[:user]
c
request.method
c
@recommendation.errors
n
recommendation_params
c
recommendation_params
recommendations_params
c
p[:user_id]
params[:user_id]
c
p[:MovieID]
p[:Review]
p[:Rating]
c
continue
recommendation_params
recommendations_params
c
@single_user
@single_usr
c
@single_user
c
@single_user
c
@single_user
c
params[:user_id]
params["user_id"]
@single_user
c
@single_user.send("followers".to_sym)
@single_user."followers"
@single_user.("followers".constantize)
@single_user.followers
@single_user
c
(request.url["followers"] || request.url["following"])
@single_user
c
@single_user
continue
request.url["user"].present?
request.url["users"].present?
request.url["users"]
request.url
params[:id]
@user
user
params
request.params["user"]
request.params
request.url
c
request.url
request
c
request.params["auth"]
c
request.params["auth"]
request
request.params
request
requestr
c
continue
@movie.to_json(:methods => :poster_url)
@movie.to_json(:methods => :get_poster_url)
continue
@movie.to_json(:methods => :get_poster_url)
@movie.to_json(:methods => :get_photo_url)
@movie["poster_url"] = @movie.Poster.url
@movie.to_s
@movie.to_a
@movie.to_hash
@movie.to_h
@movie
@movie.to_h
@movie.to_json
@movie.Poster.url
@movie.poster.url
@movie
c
n
default_validation_context
super(context)
context
contextg
output
n
c
n
continue
Paperclip.io_adapters.for(poster_base)
continue
self
image
c
p
c
params[:movie]
params[:movie][:poster_base] = params[:movie][:imdbVotes]
params[:movie]
params[:movie].delete :Title
params[:movie][:imdbID]
params
params[:movie]
p.erase :Title
p["Title"]
p["poster"]
p.to_json
p
continue
params.require(:user)
params
user_params
continue
params[:username]
params
user_params
